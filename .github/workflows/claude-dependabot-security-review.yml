name: Claude Dependabot Security Review

on:
  pull_request_target:
    types: [opened, synchronize]

jobs:
  dependabot-security-review:
    # Run only for Dependabot PRs
    if: github.actor == 'dependabot[bot]'
    
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 1

      - name: Run Claude Security Review
        id: claude-review
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # Optional: Use Claude Opus 4 for more thorough security analysis
          # model: "claude-opus-4-20250514"
          
          # Specialized prompt for Dependabot security review
          direct_prompt: |
            This is a Dependabot PR for dependency updates. Please review with focus on:
            
            1. **Security Impact Analysis**:
               - Check for any known vulnerabilities in the updated dependencies
               - Assess if the version jump could introduce breaking changes
               - Identify any new permissions or capabilities the updated packages might request
            
            2. **Compatibility Check**:
               - Verify the updated versions are compatible with our existing dependencies
               - Check if the update requires changes to our code
               - Look for any deprecation warnings
            
            3. **Risk Assessment**:
               - Evaluate the size and scope of the changes
               - Check the release notes for any security advisories
               - Assess the stability of the new versions (stable vs beta/alpha)
            
            4. **Recommendations**:
               - Provide a clear recommendation: Safe to merge / Needs manual testing / Do not merge
               - If manual testing is needed, specify what should be tested
               - Suggest any additional security measures if needed
            
            Be concise and focus on actionable security insights.

          # Optional: Use sticky comments for consistent feedback across updates
          use_sticky_comment: true
          
          # Optional: Add tools for checking package details
          # allowed_tools: "Bash(npm audit),Bash(npm ls),Bash(go mod graph)"